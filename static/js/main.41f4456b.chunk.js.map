{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["RedButton","props","classes","makeStyles","theme","button","color","minWidth","paddingLeft","paddingRight","useState","red","backgroundColor","setBackgroundColor","Button","className","fullWidth","onClick","grey","style","variant","BlueButton","blue","YellowButton","yellow","setColor","ChangeablePaper","paper","paddingTop","spacing","paddingBottom","Paper","green","orange","Cards","palette","text","secondary","margin","padding","textAlign","whiteSpace","elevation","Grid","container","item","xs","Player","marginBottom","paperRed","borderColor","borderWidth","paperBlue","paperGrey","textField","borderRadius","background","TextField","inputProps","event","stopPropagation","size","label","Boolean","window","location","hostname","match","ReactDOM","render","Container","disableGutters","Box","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.41f4456b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport red from \"@material-ui/core/colors/red\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport yellow from \"@material-ui/core/colors/yellow\";\nimport green from \"@material-ui/core/colors/green\";\nimport orange from \"@material-ui/core/colors/orange\";\nimport grey from \"@material-ui/core/colors/grey\";\n\nconst RedButton = props => {\n  const classes = makeStyles(theme => ({\n    button: {\n      color: \"white\",\n      minWidth: 0,\n      paddingLeft: 0,\n      paddingRight: 0\n    }\n  }))();\n  const [backgroundColor, setBackgroundColor] = useState(red[500]);\n  return (\n    <Button\n      className={classes.button}\n      fullWidth={true}\n      onClick={() =>\n        setBackgroundColor(backgroundColor === red[500] ? grey[300] : red[500])\n      }\n      style={{ backgroundColor: backgroundColor }}\n      variant=\"contained\"\n      {...props}\n    />\n  );\n};\n\nconst BlueButton = props => {\n  const classes = makeStyles(theme => ({\n    button: {\n      color: \"white\",\n      minWidth: 0,\n      paddingLeft: 0,\n      paddingRight: 0\n    }\n  }))();\n  const [backgroundColor, setBackgroundColor] = useState(blue[500]);\n  return (\n    <Button\n      className={classes.button}\n      fullWidth={true}\n      onClick={() =>\n        setBackgroundColor(\n          backgroundColor === blue[500] ? grey[300] : blue[500]\n        )\n      }\n      style={{ backgroundColor: backgroundColor }}\n      variant=\"contained\"\n      {...props}\n    />\n  );\n};\n\nconst YellowButton = props => {\n  const classes = makeStyles(theme => ({\n    button: {\n      minWidth: 0,\n      paddingLeft: 0,\n      paddingRight: 0\n    }\n  }))();\n  const [backgroundColor, setBackgroundColor] = useState(yellow[500]);\n  const [color, setColor] = useState(\"black\");\n  return (\n    <Button\n      className={classes.button}\n      fullWidth={true}\n      onClick={() => {\n        setBackgroundColor(\n          backgroundColor === yellow[500] ? grey[300] : yellow[500]\n        );\n        setColor(color === \"black\" ? \"white\" : \"black\");\n      }}\n      style={{ backgroundColor: backgroundColor, color: color }}\n      variant=\"contained\"\n      {...props}\n    />\n  );\n};\n\nconst ChangeablePaper = props => {\n  const classes = makeStyles(theme => ({\n    paper: {\n      paddingTop: theme.spacing(3),\n      paddingBottom: theme.spacing(3),\n      paddingRight: theme.spacing(1),\n      paddingLeft: theme.spacing(1),\n    }\n  }))();\n  const [backgroundColor, setBackgroundColor] = useState('white');\n  return (\n    <Paper\n      className={classes.paper}\n      onClick={() => {\n        switch (backgroundColor) {\n          case 'white':\n            setBackgroundColor(red[500]);\n            break;\n          case red[500]:\n            setBackgroundColor(blue[500]);\n            break;\n          case blue[500]:\n            setBackgroundColor(yellow[500]);\n            break;\n          case yellow[500]:\n            setBackgroundColor(green[500]);\n            break;\n          case green[500]:\n            setBackgroundColor(orange[500]);\n            break;\n          default:\n            setBackgroundColor('white');\n        }\n      }}\n      style={{ backgroundColor: backgroundColor }}\n      {...props}\n    />\n  );\n};\n\nconst Cards = () => {\n  const classes = makeStyles(theme => ({\n    paper: {\n      color: theme.palette.text.secondary,\n      margin: theme.spacing(1),\n      padding: theme.spacing(1),\n      textAlign: \"center\",\n      whiteSpace: \"nowrap\"\n    }\n  }))();\n\n  return (\n    <Paper className={classes.paper} elevation={2}>\n      <Grid container spacing={1}>\n        <Grid item xs>\n          <RedButton>\n            0\n          </RedButton>\n        </Grid>\n        <Grid item xs>\n          <RedButton>\n            1\n          </RedButton>\n        </Grid>\n        <Grid item xs>\n          <RedButton>\n            2\n          </RedButton>\n        </Grid>\n        <Grid item xs>\n          <RedButton>\n            3\n          </RedButton>\n        </Grid>\n        <Grid item xs>\n          <RedButton>\n            4\n          </RedButton>\n        </Grid>\n        <Grid item xs>\n          <YellowButton>\n            5\n          </YellowButton>\n        </Grid>\n        <Grid item xs>\n          <RedButton>\n            6\n          </RedButton>\n        </Grid>\n        <Grid item xs>\n          <RedButton>\n            7\n          </RedButton>\n        </Grid>\n        <Grid item xs>\n          <RedButton>\n            8\n          </RedButton>\n        </Grid>\n        <Grid item xs>\n          <RedButton>\n            9\n          </RedButton>\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs>\n          <BlueButton>\n            0\n          </BlueButton>\n        </Grid>\n        <Grid item xs>\n          <BlueButton>\n            1\n          </BlueButton>\n        </Grid>\n        <Grid item xs>\n          <BlueButton>\n            2\n          </BlueButton>\n        </Grid>\n        <Grid item xs>\n          <BlueButton>\n            3\n          </BlueButton>\n        </Grid>\n        <Grid item xs>\n          <BlueButton>\n            4\n          </BlueButton>\n        </Grid>\n        <Grid item xs>\n          <YellowButton>\n            5\n          </YellowButton>\n        </Grid>\n        <Grid item xs>\n          <BlueButton>\n            6\n          </BlueButton>\n        </Grid>\n        <Grid item xs>\n          <BlueButton>\n            7\n          </BlueButton>\n        </Grid>\n        <Grid item xs>\n          <BlueButton>\n            8\n          </BlueButton>\n        </Grid>\n        <Grid item xs>\n          <BlueButton>\n            9\n          </BlueButton>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nconst Player = () => {\n  const classes = makeStyles(theme => ({\n    container: {\n      marginBottom: theme.spacing(1)\n    },\n    paper: {\n      margin: theme.spacing(1),\n      padding: theme.spacing(1),\n    },\n    paperRed: {\n      borderColor: red[200],\n      borderWidth: '2px',\n      padding: theme.spacing(1)\n    },\n    paperBlue: {\n      borderColor: blue[200],\n      borderWidth: '2px',\n      padding: theme.spacing(1)\n    },\n    paperGrey: {\n      borderWidth: '2px',\n      padding: theme.spacing(1)\n    },\n    textField: {\n      borderRadius: '4px',\n      background: 'white'\n    },\n  }))();\n\n  return (\n    <Paper className={classes.paper} elevation={2}>\n      <Grid container className={classes.container} spacing={1}>\n        <Grid item xs>\n          <ChangeablePaper>\n            <TextField\n              className={classes.textField}\n              fullWidth={true}\n              inputProps={{ style: { textAlign: \"center\" } }}\n              onClick={ event => event.stopPropagation() }\n              size=\"small\"\n              variant=\"outlined\"\n            />\n          </ChangeablePaper>\n        </Grid>\n        <Grid item xs>\n          <ChangeablePaper>\n            <TextField\n              className={classes.textField}\n              fullWidth={true}\n              inputProps={{ style: { textAlign: \"center\" } }}\n              onClick={ event => event.stopPropagation() }\n              size=\"small\"\n              variant=\"outlined\"\n            />\n          </ChangeablePaper>\n        </Grid>\n        <Grid item xs>\n          <ChangeablePaper>\n            <TextField\n              className={classes.textField}\n              fullWidth={true}\n              inputProps={{ style: { textAlign: \"center\" } }}\n              onClick={ event => event.stopPropagation() }\n              size=\"small\"\n              variant=\"outlined\"\n            />\n          </ChangeablePaper>\n        </Grid>\n        <Grid item xs>\n          <ChangeablePaper>\n            <TextField\n              className={classes.textField}\n              fullWidth={true}\n              inputProps={{ style: { textAlign: \"center\" } }}\n              onClick={ event => event.stopPropagation() }\n              size=\"small\"\n              variant=\"outlined\"\n            />\n          </ChangeablePaper>\n        </Grid>\n        <Grid item xs>\n          <ChangeablePaper>\n            <TextField\n              className={classes.textField}\n              fullWidth={true}\n              inputProps={{ style: { textAlign: \"center\" } }}\n              onClick={ event => event.stopPropagation() }\n              size=\"small\"\n              variant=\"outlined\"\n            />\n          </ChangeablePaper>\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs>\n          <TextField\n            className={classes.textField}\n            fullWidth={true}\n            inputProps={{ style: { textAlign: \"center\" } }}\n            label=\"前方3枚\"\n            size=\"small\"\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid item xs>\n          <TextField\n            className={classes.textField}\n            fullWidth={true}\n            inputProps={{ style: { textAlign: \"center\" } }}\n            label=\"中央3枚\"\n            size=\"small\"\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid item xs>\n          <TextField\n            className={classes.textField}\n            fullWidth={true}\n            inputProps={{ style: { textAlign: \"center\" } }}\n            label=\"後方3枚\"\n            size=\"small\"\n            variant=\"outlined\"\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs>\n          <TextField\n            className={classes.textField}\n            fullWidth={true}\n            inputProps={{ style: { textAlign: \"center\" } }}\n            label=\"最大 − 最小\"\n            size=\"small\"\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid item xs>\n          <TextField\n            className={classes.textField}\n            fullWidth={true}\n            inputProps={{ style: { textAlign: \"center\" } }}\n            label=\"中央５以上４以下\"\n            size=\"small\"\n            variant=\"outlined\"\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs>\n          <Paper className={classes.paperRed} variant=\"outlined\">\n            <Grid container spacing={1}>\n              <Grid item xs>\n                <TextField\n                  className={classes.textField}\n                  fullWidth={true}\n                  inputProps={{ style: { textAlign: \"center\" } }}\n                  label=\"枚数\"\n                  size=\"small\"\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item xs>\n                <TextField\n                  className={classes.textField}\n                  fullWidth={true}\n                  inputProps={{ style: { textAlign: \"center\" } }}\n                  label=\"合計\"\n                  size=\"small\"\n                  variant=\"outlined\"\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.paperBlue} variant=\"outlined\">\n            <Grid container spacing={1}>\n              <Grid item xs>\n                <TextField\n                  className={classes.textField}\n                  fullWidth={true}\n                  inputProps={{ style: { textAlign: \"center\" } }}\n                  label=\"枚数\"\n                  size=\"small\"\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item xs>\n                <TextField\n                  className={classes.textField}\n                  fullWidth={true}\n                  inputProps={{ style: { textAlign: \"center\" } }}\n                  label=\"合計\"\n                  size=\"small\"\n                  variant=\"outlined\"\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.paperGrey} variant=\"outlined\">\n            <Grid container spacing={1}>\n              <Grid item xs>\n                <TextField\n                  className={classes.textField}\n                  fullWidth={true}\n                  inputProps={{ style: { textAlign: \"center\" } }}\n                  label=\"ペア\"\n                  size=\"small\"\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item xs>\n                <TextField\n                  className={classes.textField}\n                  fullWidth={true}\n                  inputProps={{ style: { textAlign: \"center\" } }}\n                  label=\"全合計\"\n                  size=\"small\"\n                  variant=\"outlined\"\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.paperGrey} variant=\"outlined\">\n            <Grid container spacing={1}>\n              <Grid item xs>\n                <TextField\n                  className={classes.textField}\n                  fullWidth={true}\n                  inputProps={{ style: { textAlign: \"center\" } }}\n                  label=\"偶数\"\n                  size=\"small\"\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item xs>\n                <TextField\n                  className={classes.textField}\n                  fullWidth={true}\n                  inputProps={{ style: { textAlign: \"center\" } }}\n                  label=\"奇数\"\n                  size=\"small\"\n                  variant=\"outlined\"\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default function App() {\n  return (\n    <Container disableGutters={true}>\n      <Box>\n        <Cards />\n        <Player />\n        <Player />\n        <Player />\n      </Box>\n    </Container>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}